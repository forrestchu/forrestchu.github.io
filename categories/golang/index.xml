<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>golang on 网络技术汇</title>
    <link>https://forrestchu.github.io/categories/golang/</link>
    <description>Recent content in golang on 网络技术汇</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 02 Apr 2014 00:00:00 +0000</lastBuildDate><atom:link href="https://forrestchu.github.io/categories/golang/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>文章搜索</title>
      <link>https://forrestchu.github.io/post/search/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://forrestchu.github.io/post/search/</guid>
      <description>Step 1. Install Hugo Go to Hugo releases and download the appropriate version for your OS and architecture. Save it somewhere specific as we will be using it in the next step. More complete instructions are available at Install Hugo Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now. Follow the following steps: Clone the</description>
    </item>
    
    <item>
      <title>欢迎投稿</title>
      <link>https://forrestchu.github.io/post/contrib/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://forrestchu.github.io/post/contrib/</guid>
      <description>Hugo uses the excellent Go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in Go templates. This document</description>
    </item>
    
  </channel>
</rss>
